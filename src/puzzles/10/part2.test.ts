import { describe, test, expect } from 'bun:test';
import { readMultilineFile } from '../../utils/file.ts';
import { solve } from './part2';

describe('day 10 (part 2)', () => {
  test('example', async () => {
    const input = [
      '...........', // ...........
      '.S-------┐.', // .S-------┐.
      '.|┌-----┐|.', // .|┌-----┐|.
      '.||.....||.', // .||.....||.
      '.||.....||.', // .||.....||.
      '.|└-┐.┌-┘|.', // .|└-┐.┌-┘|.
      '.|..|.|..|.', // .|XX|.|XX|.
      '.└--┘.└--┘.', // .└--┘.└--┘.
      '...........', // ...........
    ];

    expect(solve(input)).toBe(4);
  });

  test('example 2', async () => {
    const input = [
      '..........', // ..........
      '.S------┐.', // .S------┐.
      '.|┌----┐|.', // .|┌----┐|.
      '.||....||.', // .||....||.
      '.||....||.', // .||....||.
      '.|└-┐┌-┘|.', // .|└-┐┌-┘|.
      '.|..||..|.', // .|XX||XX|.
      '.└--┘└--┘.', // .└--┘└--┘.
      '..........', // ..........
    ];

    expect(solve(input)).toBe(4);
  });

  test('example 3', async () => {
    const input = [
      '.┌----┐┌┐┌┐┌┐┌-┐....', // .┌----┐┌┐┌┐┌┐┌-┐....
      '.|┌--┐||||||||┌┘....', // .|┌--┐||||||||┌┘....
      '.||.┌┘||||||||└┐....', // .||.┌┘||||||||└┐....
      '┌┘└┐└┐└┘└┘||└┘.└-┐..', // ┌┘└┐└┐└┘└┘||└┘X└-┐..
      '└--┘.└┐...└┘S┐┌-┐└┐.', // └--┘.└┐XXX└┘S┐┌-┐└┐.
      '....┌-┘..┌┐┌┘|└┐└┐└┐', // ....┌-┘XX┌┐┌┘|└┐└┐└┐
      '....└┐.┌┐||└┐|.└┐└┐|', // ....└┐X┌┐||└┐|X└┐└┐|
      '.....|┌┘└┘|┌┘|┌┐|.└┘', // .....|┌┘└┘|┌┘|┌┐|.└┘
      '....┌┘└-┐.||.||||...', // ....┌┘└-┐.||.||||...
      '....└---┘.└┘.└┘└┘...', // ....└---┘.└┘.└┘└┘...
    ];

    expect(solve(input)).toBe(8);
  });

  test('example 4', async () => {
    const input = [
      '┌┌┐┌S┌┐┌┐┌┐┌┐┌┐┌---┐', // ┌┌┐┌S┌┐┌┐┌┐┌┐┌┐┌---┐
      '└|└┘||||||||||||┌--┘', // └|└┘||||||||||||┌--┘
      '┌└-┐└┘└┘||||||└┘└-┐┐', // ┌└-┐└┘└┘||||||└┘└-┐┐
      '┌--┘┌--┐||└┘└┘┐┌┐┌┘-', // ┌--┘┌--┐||└┘└┘X┌┐┌┘-
      '└---┘┌-┘└┘.||-┌┘└┘┘┐', // └---┘┌-┘└┘XXXX┌┘└┘┘┐
      '|┌|┌-┘┌---┐┌┐-└┐└|┐|', // |┌|┌-┘┌---┐XXX└┐└|┐|
      '|┌┌┘┌┐└┐┌-┘┌┐|┘└---┐', // |┌┌┘┌┐└┐┌-┘┌┐XX└---┐
      '┐-└-┘└┐||┌┐|└┐┌-┐┌┐|', // ┐-└-┘└┐||┌┐|└┐┌-┐┌┐|
      '└.└┐└┌┘|||||┌┘└┐||└┘', // └.└┐└┌┘|||||┌┘└┐||└┘
      '└┐┘└┘└-┘└┘└┘└--┘└┘.└', // └┐┘└┘└-┘└┘└┘└--┘└┘.└
    ];

    expect(solve(input)).toBe(10);
  });

  test('solution', async () => {
    const input = await readMultilineFile(`${import.meta.dir}/input.txt`);

    expect(solve(input)).toBe(482);
  });
});
